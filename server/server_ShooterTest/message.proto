syntax = "proto3";
package Update_ShooterTest;

enum TYPE{
    updateInfo_S_TO_C = 0;

    playerNickname_C_TO_S = 1;
    welcome_S_TO_C = 2;
    
    
    playerInfo_S_TO_C = 3;
    playerInput_C_TO_S = 4;
    spawnPlayer_S_TO_C = 5;
    startGame_S_TO_C = 6;
    playerLeft_S_TO_C = 7;
    playerInputs_C_TO_S = 8;


    rttMeasure_C_TO_S = 9;
    rttMeasure_S_TO_C = 10;
    hitAcknowledged_S_TO_C = 11;
}

message RttMeasure_C_TO_S{
    int32 packetId = 1;
    double rttTime = 2;
}
message RttMeasure_S_TO_C{
    int32 packetId = 1;
}

message HitAcknowledged_S_TO_C{
    int32 attacker_slotid = 1;
    int32 enemy_slotid = 2;
    int32 damage = 3;
    bool dead = 4;
    //debug:
    float e_pos_x = 5;
    float e_pos_y = 6;
    float e_rot =  7;
    float a_pos_x = 8;
    float a_pos_y = 9;
    float a_rot = 10;
}

message Welcome_S_TO_C{
    int32 slotid = 1;
    string token = 2;
}

message PlayerLeft_S_TO_C{
    int32 slotid = 1;
}

message PlayerNickname_C_TO_S{
    string nickname = 1;
}

message SpawnPlayer_S_TO_C{
    int32 slotid = 1;
    string nickname = 2;
    float x = 3;
    float y = 4;
    float angle = 5; 
}

message StartGame_S_TO_C{

}

message PlayerInfo_S_TO_C{
    float x = 1;
    float y = 2;
    float angle = 3;
    int32 id = 4;
}

message UpdateInfo_S_TO_C{
    int32 lastProcessedFrameID = 1;
    repeated PlayerInfo_S_TO_C playerInfos = 2;
    int32 inputBufferSize = 3;
}


message PlayerInput_C_TO_S{
    int32 frameID = 1;
    bool w = 2;
    bool s = 3;
    bool a = 4;
    bool d = 5;
    // float rotation = 6;
    float mouseX = 6;
    float mouseY = 7;
    bool mouseDown = 8;
}

message PlayerInputs_C_TO_S{
    repeated PlayerInput_C_TO_S inputs = 1;
    int32 id = 2;
}
